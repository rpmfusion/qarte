=== modified file 'arteconcert.py'
--- arteconcert.py	2021-08-23 08:57:52 +0000
+++ arteconcert.py	2021-11-01 08:04:48 +0000
@@ -295,10 +295,13 @@
         # Quick method first
         idx = item.order
         #https://www.w3schools.com/tags/ref_urlencode.asp
+        #url = "".join(["https://api.arte.tv/api/",
+                      #"player/v1/config/{0}/{1}?autostart=1&",
+                      #"lifeCycle=1&lang={2}_{3}"])
         url = "".join(["https://api.arte.tv/api/",
-                      "player/v1/config/{0}/{1}?autostart=1&",
-                      "lifeCycle=1&lang={2}_{3}"])
-        url = url.format(self.lang, idx, self.lang, self.lang.upper())
+                      "player/v1/config/{0}/{1}"])
+        url = url.format(self.lang, idx)
+        #url = url.format(self.lang, idx, self.lang, self.lang.upper())
         item.jsonurl = url
         content = self.get_page(url)
 

=== modified file 'artetv.py'
--- artetv.py	2021-08-23 08:02:22 +0000
+++ artetv.py	2021-11-01 08:04:48 +0000
@@ -466,6 +466,7 @@
         lgg.info("Download item page: %s" % item.url)
         if item.url.startswith(("/fr/", "/de/")):
             item.url = "https://www.arte.tv" + item.url
+
         desc, origin, anno, duration, rea, country = '', '', '', '', '', ''
         page = self.get_page_content(item.url)
 
@@ -484,33 +485,44 @@
             short = video.get("shortDescription", "")
             if short is None:
                 short = ""
+
             desc = video.get("fullDescription", "")
             if desc is None:
                 desc = ''
+
             item.description = "%s<br/>%s" %(short, desc)
             try:
                 item.label = video["kind"].get("label", "parsed")
             except KeyError:
                 item.label = "parsed"
+
             item.duration = self.format_duration(video.get("duration", 0))
-            credits = video["credits"]
-            for credit in credits:
-                code = credit["code"]
-                if code == "REA":
-                    item.realisation = credit["values"]
-                elif code == "ACT":
-                    item.actors = credit["values"]
-                elif code == "MUS":
-                    item.music = credit["values"]
-                elif code == "COUNTRY":
-                    item.origin = ", ".join(credit["values"])
-                elif code == "PRODUCTION_YEAR":
-                    if credit["values"]:
-                        item.anno = credit["values"][0]
+            try:
+                credits = video["credits"]
+            except:
+                pass
+            else:
+                for credit in credits:
+                    code = credit["code"]
+                    if code == "REA":
+                        item.realisation = credit["values"]
+
+                    elif code == "ACT":
+                        item.actors = credit["values"]
+
+                    elif code == "MUS":
+                        item.music = credit["values"]
+
+                    elif code == "COUNTRY":
+                        item.origin = ", ".join(credit["values"])
+
+                    elif code == "PRODUCTION_YEAR":
+                        if credit["values"]:
+                            item.anno = credit["values"][0]
+
             if not item.description:
                 item.description = item.teaser
 
-
     def format_duration(self, value):
         if value is not None:
             min_, sec = divmod(value, 60)
@@ -589,6 +601,17 @@
             return str(content.read().decode('utf-8', 'replace'))
         except Exception as why:
             lgg.info('HTTP error: %s, %s' % (url, why))
+            if "#" in url:
+                url = url.replace("#", "/#")
+                req = urllib.request.Request(url, data=None, 
+                                 headers={"User-Agent": user_agent})
+                lgg.info("Try with: %s" % url)
+                try:
+                    content = urllib.request.urlopen(req)
+                    return str(content.read().decode('utf-8', 'replace'))
+                except Exception as why:
+                    lgg.info('HTTP error: %s, %s' % (url, why))
+
         return False
 
     def load_image(self, item):
@@ -604,6 +627,7 @@
                 with open(path, 'wb') as objfile:
                     f = urllib.request.urlopen(item.pix_url, timeout=5)
                     objfile.write(f.read())
+
                 return path
             except Exception as why:
                 lgg.info("Can't load image: %s" % item.pix_url)
@@ -617,6 +641,7 @@
                 with open(fname, 'wb') as objfile:
                     f = urllib.request.urlopen(url, timeout=5)
                     objfile.write(f.read())
+
                 return fname
             except Exception as why:
                 lgg.info("Can't load image: %s" % url)
@@ -708,6 +733,7 @@
     def remove_old_videos(self):
         def remove():
             self.clean_thumbnails()
+
         Thread(target=remove).start()
 
     def clean_thumbnails(self):
@@ -775,9 +801,11 @@
     def edit_category_data(self, title, subtitle, teaser):
         if not title.endswith("\n"):
             title += "\n"
+
         if subtitle is not None:
             if not subtitle.endswith("\n"):
                 subtitle += "\n"
+
         else:
             subtitle = ""
         self.ui.pitch_editor.clear()

=== modified file 'gui/mainui.py'
--- gui/mainui.py	2020-10-15 09:33:01 +0000
+++ gui/mainui.py	2021-11-01 08:04:48 +0000
@@ -471,8 +471,8 @@
         if img.isNull():
             img = QPixmap("medias/noPreview.png").scaled(QSize(180, 102))
 
-        w = float(QSize.width(img.size()))
-        h = float(QSize.height(img.size()))
+        w = QSize.width(img.size())
+        h = QSize.height(img.size())
         # white frame
         brect = QRect(0, 0, w+3, h+3)
         bckgrnd = back.scaled(QSize(w+25, h+25))

